{
    "variables": {
        "http": {
            "root": "./build/www"
        }
        "route": {
            "root": "build/_route_"
        }
        "src": {
            "root": "./src",
        }
        "build": {
            "root": "./build",
        }
        "forge": "./forge",

        "typescript": {
            "root": "./forge/typescript",
            "route": {
                "root": "{typescript.root}/route/"
                "url": "{www.root}/typescript" 
            }
        }
    },

    "services": {

        "spawn": {

            "typescript_spawn": {
                "command": "node {forge}/build.js --spawn",
                "debounce": 500,
                "race": 2000,
                "reboot": true,

                "route": {
                    "root": "{route.root}/typescript/"
                }
            },

            "spawn python": {
                "command": "python ./forge{forge}",
                "race": 2000
            }
        },

        "fork": {

            "typescript_fork": {
                "command": "{forge}/build.js --fork",
                "debounce": 500,
                "race": 2000,

                "reboot": true,

                "route": {
                    "http": {
                        "root": "{forge}/typescript/http/"
                    }
                    "ether": { 
                        "port": 9876
                    }
                    "api": {
                        "build": {
                            "url": "{typescript.http.root}/build/build.html",
                            "form": "{typescript.http.root}/build/form.htmx"
                        }
                    }
                }
            }

        },

        "exec": {

            "typescript_exec": {
                "command": "{{command}}",
                "debounce": 500,
                "race": 2000,
                "route_root": "{route_root}/typescript/"
            },

            "uglify_test": {
                "command": "python {forge}/hello.py",
                "debounce": 500,
                "race": 250

            }

        },

        "plugin": {

        }

    },

    "tasks": [
        {
            "name": "esbuild",

            "enabled": true,

            "actions": [

                [
                    {
                        "name": "typescript build",
                        "service": "typescript_fork",
                        "triggers": [
                            { "watch": [ "src/**/*.ts$" ] }  
                        ],
                        "route": {
                            "service" : "typescript_fork",
                            "local": "{typescript.root}/build",
                            "remote": "https://"
                        }
                    },
                    {
                        "in": "{src_root}/ts/main.tsx",
                        "out": "{build_root}/www/js/compiled.js",
                        "bundled": true,
                        "platform": "browser",
                        "format": "cjs",
                        "tree-shaking": "bool"
                    }
                ],

                

            ]
        }
    ]
}


"api": {
                        "build": {
                            "list": {
                                "in": "url",
                                "out": "url",
                                "bundled": "bool",
                                "format": ["cjs", "esm", "iife"],
                                "platform": ["node", "browser", "neutral"],
                                "tree-shaking": "bool"
                                "watch": "bool",

                            },
                            "": ""
                        },
                        "obfuscate": {
                            "list": {
                                "fetch": "{typescript.root}/api/build/form.htmx",
                                "fetch": "https://{typescript.root}/api/build/form.htmx"
                            }
                        },
                        "minify": {
                            
                        }